[gd_scene load_steps=6 format=1]

[ext_resource path="res://assets/blood_particles.png" type="Texture" id=1]
[ext_resource path="res://assets/blood_splatter.png" type="Texture" id=2]

[sub_resource type="GDScript" id=2]

script/source = "extends Particles2D

func _ready():
	randomize()
	get_node( \"Sprite\" ).set_frame( randi() % 4 )
	get_node( \"Sprite\" ).set_global_rot( 0 )

func _show_splatter():
	# check if there is a floor beneath the point where the splatter should appear
	var floor_tile = game.get_floor_at( get_pos() + Vector2( 5, 49 ) )
	if floor_tile != -1:
		var scn = preload( \"res://scenes/blood_splatter.tscn\" )
		var splatter = scn.instance()
		splatter.set_pos( get_pos() + Vector2( 5, 49 ).rotated( get_rot() ) )
		splatter.set_frame( randi() % 4 )
		get_parent().add_child( splatter )
"

[sub_resource type="GDScript" id=1]

script/source = "extends Sprite

func _ready():
	set_fixed_process( true )

var falling = false
var vel = 0
func _fixed_process(delta):
	if not falling:
		var uplow = game.check_fall_area( self, get_parent().get_global_pos() + get_pos().rotated( get_parent().get_rot() ) )
		if uplow == 1:
			falling = true
			set_z( -1 )
		elif uplow == -1:
			falling = true
	else:
		vel = min( game.TERMINAL_VEL, vel + game.GRAVITY * delta )
		set_opacity( lerp( get_opacity(), 0, 10*delta ) )
		var newpos = get_parent().get_pos()
		newpos.y += vel * delta
		get_parent().set_pos( newpos )
		if get_global_pos().y > 500:
			set_fixed_process( false )
			queue_free()"

[sub_resource type="Animation" id=3]

length = 1.0
loop = false
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:config/emitting")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 0.25 ),
"transitions": FloatArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:visibility/visible")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0, 0.2 ),
"transitions": FloatArray( 1, 1 ),
"update": 1,
"values": [ false, false ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0.2 ),
"transitions": FloatArray( 1 ),
"values": [ {
"args": [  ],
"method": "_show_splatter"
} ]
}

[node name="blood_particles" type="Particles2D"]

config/amount = 20
config/lifetime = 1.0
config/time_scale = 4.0
config/emit_timeout = 1.0
config/emitting = false
config/process_mode = 1
config/explosiveness = 0.1
config/texture = ExtResource( 1 )
config/h_frames = 2
config/v_frames = 2
params/direction = 0.0
params/spread = 10.0
params/linear_velocity = 50.0
params/spin_velocity = 0.0
params/orbit_velocity = 0.0
params/gravity_direction = 0.0
params/gravity_strength = 0.0
params/radial_accel = 0.0
params/tangential_accel = 0.0
params/damping = 0.0
params/initial_angle = 0.0
params/initial_size = 1.0
params/final_size = 1.0
params/hue_variation = 0.0
params/anim_speed_scale = 0.0
params/anim_initial_pos = 0.0
randomness/anim_initial_pos = 1.0
script/script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]

visibility/visible = false
transform/pos = Vector2( 5, 49 )
texture = ExtResource( 2 )
vframes = 2
hframes = 2
script/script = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/cycle = SubResource( 3 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = "cycle"


