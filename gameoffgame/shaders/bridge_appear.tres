[gd_resource type="CanvasItemShader" format=1]

[resource]

_code = {
"fragment": "uniform float threshold = 0.0;
uniform texture fog;


COLOR.rgb = tex(TEXTURE, UV).rgb;
float rawA = tex(fog, UV).a;
COLOR.a = smoothstep(threshold/2.0, threshold, rawA);

/*
float a = tex( fog, UV ).a;
if( a >= threshold )
{
	COLOR = tex( TEXTURE, UV );
}
else 
{
	if( a >= threshold / 2.0 )
	{
		vec4 b = tex( TEXTURE, UV );
		COLOR = vec4( b.rgb, b.a / 2.0 );
	}
	else
	{
		COLOR = vec4( 0.0, 0.0, 0.0, 0.0 );
	}
}
*/",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

